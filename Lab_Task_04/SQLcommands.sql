conn SYSTEM/12345678

GRANT ALL PRIVILEGES TO s200042151;

conn s200042151/cse4308

--1--

SELECT DISTINCT ACT_FIRSTNAME, ACT_LASTNAME
FROM ACTOR DIRECTOR
WHERE ACTOR.ACT_FIRSTNAME = DIRECTOR.DIR_FIRSTNAME AND ACTOR.ACT_LASTNAME = DIRECTOR.DIR_LASTNAME;


--WITH INTERSECTION--
SELECT ACT_FIRSTNAME, ACT_LASTNAME
FROM ACTOR
INTERSECT
SELECT DIR_FIRSTNAME, DIR_LASTNAME
FROM DIRECTOR;


--2--

SELECT ACT_FIRSTNAME
FROM ACTOR
UNION ALL
SELECT DIR_FIRSTNAME
FROM DIRECTOR;

--3--

SELECT DISTINCT MOV_TITLE
FROM MOVIE
WHERE MOVIE.MOV_ID NOT IN(SELECT MOV_ID FROM RATING);

--WITH MINUS--
SELECT MOV_TITLE
FROM MOVIE
MINUS
SELECT MOV_TITLE
FROM MOVIE, RATING
WHERE MOVIE.MOV_ID = RATING.MOV_ID;


--4--

SELECT AVG(NVL(REV_STARS,0)) AS AVG_RATING
FROM RATING;

--5--

SELECT MOVIE.MOV_TITLE, MIN(NVL(REV_STARS,0)) AS MIN_STARS 
FROM RATING NATURAL JOIN MOVIE
GROUP BY MOVIE.MOV_TITLE
ORDER BY MIN_STARS DESC;

--6--

SELECT ACTOR.ACT_LASTNAME, COUNT(REV_STARS) AS CNT_STARS
FROM CASTS JOIN ACTOR ON CASTS.ACT_ID = ACTOR.ACT_ID 
     JOIN RATING ON CASTS.MOV_ID = RATING.MOV_ID
GROUP BY ACTOR.ACT_LASTNAME
ORDER BY CNT_STARS;

--Different approach with NAtural join

SELECT ACTOR.ACT_LASTNAME, COUNT(REV_STARS) AS CNT_STARS
FROM (CASTS NATURAL JOIN ACTOR ) NATURAL JOIN RATING
GROUP BY ACTOR.ACT_LASTNAME
ORDER BY CNT_STARS;


--7--

SELECT ACT_LASTNAME, AVG(MOVIE.MOV_TIME) 
FROM ACTOR, CASTS, MOVIE 
WHERE ACTOR.ACT_ID = CASTS.ACT_ID AND CASTS.MOV_ID = MOVIE.MOV_ID 
GROUP BY ACTOR.ACT_LASTNAME 
MINUS 
SELECT ACT_LASTNAME, AVG(MOVIE.MOV_TIME) 
FROM ACTOR, CASTS, MOVIE, DIRECTION, DIRECTOR 
WHERE ACTOR.ACT_ID = CASTS.ACT_ID AND CASTS.MOV_ID = 
        MOVIE.MOV_ID AND MOVIE.MOV_ID = DIRECTION.MOV_ID AND
        DIRECTION.DIR_ID = DIRECTOR.DIR_ID AND
DIRECTOR.DIR_FIRSTNAME = 'James' AND DIRECTOR.DIR_LASTNAME = 'Cameron' 
GROUP BY ACTOR.ACT_LASTNAME;

SELECT ACT_LASTNAME, AVG(MOVIE.MOV_TIME) 
FROM ACTOR, CASTS, MOVIE, DIRECTION, DIRECTOR 
HAVING ACTOR.ACT_ID = CASTS.ACT_ID AND CASTS.MOV_ID = 
        MOVIE.MOV_ID AND MOVIE.MOV_ID = DIRECTION.MOV_ID AND
        DIRECTION.DIR_ID = DIRECTOR.DIR_ID AND
        DIRECTOR.DIR_FIRSTNAME = 'James' AND DIRECTOR.DIR_LASTNAME = 'Cameron';

--WITH HAVING CLAUSE--

SELECT ACTOR.ACT_LASTNAME, AVG(MOVIE.MOV_TIME) AS AVG_TIME
FROM CASTS JOIN ACTOR ON CASTS.ACT_ID = ACTOR.ACT_ID
     JOIN MOVIE ON CASTS.MOV_ID = MOVIE.MOV_ID
     JOIN DIRECTION ON CASTS.MOV_ID = DIRECTION.MOV_ID
     JOIN DIRECTOR ON DIRECTION.DIR_ID = DIRECTOR.DIR_ID
GROUP BY ACTOR.ACT_LASTNAME,DIRECTOR.DIR_FIRSTNAME,DIRECTOR.DIR_LASTNAME 
HAVING DIRECTOR.DIR_FIRSTNAME NOT IN ('James') AND DIRECTOR.DIR_LASTNAME NOT IN ('Cameron');


--8--


SELECT A.FIRSTNAME, A.LASTNAME, A.AVG_STARS
FROM    (SELECT *
         FROM(  SELECT DIRECTOR.DIR_FIRSTNAME FIRSTNAME, DIRECTOR.DIR_LASTNAME LASTNAME, MOVIE.MOV_TITLE, AVG(NVL(REV_STARS,0)) AS AVG_STARS 
                FROM  (((DIRECTOR NATURAL JOIN DIRECTION) NATURAL JOIN MOVIE) NATURAL JOIN RATING)
                GROUP BY (DIRECTOR.DIR_FIRSTNAME, DIRECTOR.DIR_LASTNAME, MOVIE.MOV_TITLE)
                ORDER BY AVG_STARS DESC)) A
WHERE ROWNUM <= 1;



--WITH ALL--
SELECT ALL A.FIRSTNAME, A.LASTNAME, A.AVG_STARS
FROM    (SELECT *
         FROM(  SELECT ALL DIRECTOR.DIR_FIRSTNAME FIRSTNAME, DIRECTOR.DIR_LASTNAME LASTNAME, MOVIE.MOV_TITLE, AVG(NVL(REV_STARS,0)) AS AVG_STARS 
                FROM  (((DIRECTOR NATURAL JOIN DIRECTION) NATURAL JOIN MOVIE) NATURAL JOIN RATING)
                GROUP BY (DIRECTOR.DIR_FIRSTNAME, DIRECTOR.DIR_LASTNAME, MOVIE.MOV_TITLE)
                ORDER BY AVG_STARS DESC)) A
WHERE ROWNUM <= 1;


--9--

SELECT MOVIE.MOV_ID, MOVIE.MOV_TITLE, MOVIE.MOV_YEAR, MOVIE.MOV_LANGUAGE,MOVIE.MOV_RELEASEDATE,MOVIE.MOV_COUNTRY,MOV_TIME
FROM ACTOR, DIRECTOR, DIRECTION, MOVIE, CASTS
WHERE  (ACTOR.ACT_FIRSTNAME = DIRECTOR.DIR_FIRSTNAME AND ACTOR.ACT_LASTNAME = DIRECTOR.DIR_LASTNAME) AND
        (DIRECTOR.DIR_ID = DIRECTION.DIR_ID AND
        DIRECTION.MOV_ID = MOVIE.MOV_ID) AND 
        (ACTOR.ACT_ID = CASTS.ACT_ID AND
        CASTS.MOV_ID = MOVIE.MOV_ID);
--10--

SELECT MOVIE.MOV_TITLE, AVG(NVL(REV_STARS,0)) AS AVG_STARS 
FROM RATING JOIN MOVIE ON RATING.MOV_ID = MOVIE.MOV_ID
GROUP BY MOVIE.MOV_TITLE
HAVING AVG(NVL(REV_STARS,0)) > 7;

--WITHOUT HAVING CLAUSE--

SELECT MOV_TITLE, AVG_RATING
FROM    (SELECT MOV_TITLE, AVG(NVL(REV_STARS,0)) AS AVG_RATING
        FROM MOVIE, RATING
        WHERE MOVIE.MOV_ID = RATING.MOV_ID
        GROUP BY MOVIE.MOV_TITLE)
WHERE AVG_RATING > 7;

--11--

SELECT DISTINCT MOV_TITLE, AVG_RATING
FROM    (SELECT MOV_TITLE, AVG(NVL(REV_STARS,0)) AS AVG_RATING
        FROM MOVIE, RATING
        WHERE MOVIE.MOV_ID = RATING.MOV_ID
        GROUP BY MOVIE.MOV_TITLE)
WHERE AVG_RATING > (
        SELECT AVG(NVL(REV_STARS,0)) AS AVG_RATING
        FROM RATING);



--12--

SELECT DISTINCT MOV_TITLE,(SELECT AVG(NVL(REV_STARS,0))
                           FROM RATING
                           WHERE MOVIE.MOV_ID = RATING.MOV_ID)
FROM MOVIE, RATING
WHERE MOVIE.MOV_ID = RATING.MOV_ID;

--13--

SELECT ACT_FIRSTNAME ,COUNT(*) AS Occurrence 
FROM ACTOR 
WHERE ACT_GENDER = 'F'
GROUP BY ACT_FIRSTNAME 
HAVING COUNT(*)>1; 

--14--

SELECT MOV_ID,MOV_TITLE,MAX(REV_STARS) AS MAX_RATING 
FROM (
        ((SELECT * FROM ACTOR WHERE ACT_GENDER='F') NATURAL JOIN CASTS) 
        NATURAL JOIN 
        (
                (SELECT MOV_TITLE,MOV_ID,COUNT(*) as OCCURENCES 
                 FROM MOVIE NATURAL JOIN RATING 
                 GROUP BY MOV_ID,MOV_TITLE 
                 HAVING COUNT(*)>=10) 
                NATURAL JOIN
                (
                        DIRECTION 
                        NATURAL JOIN 
                                (SELECT DIR_ID 
                                 FROM DIRECTOR NATURAL JOIN DIRECTION 
                                 GROUP BY DIR_ID 
                                 HAVING COUNT(DIR_ID)>=1)
                )
        ) 
        NATURAL JOIN 
        (
                (SELECT * 
                FROM RATING NATURAL JOIN REVIEWER 
                WHERE REV_NAME='Neal Wruck' AND REV_STARS>4)
        )
     )
GROUP BY MOV_ID,MOV_TITLE
ORDER BY MAX_RATING DESC;
